#include <stdio.h>
#include <stdint.h>

#define BLOCK_SIZE 64 // DES block size
#define KEY_SIZE 56   // DES key size

// Initial permutation table
static const int initial_permutation_table[BLOCK_SIZE] = {
    58, 50, 42, 34, 26, 18, 10, 2,
    60, 52, 44, 36, 28, 20, 12, 4,
    62, 54, 46, 38, 30, 22, 14, 6,
    64, 56, 48, 40, 32, 24, 16, 8,
    57, 49, 41, 33, 25, 17, 9, 1,
    59, 51, 43, 35, 27, 19, 11, 3,
    61, 53, 45, 37, 29, 21, 13, 5,
    63, 55, 47, 39, 31, 23, 15, 7
};

// Example key (you should replace this with your key)
static const uint64_t example_key = 0x133457799BBCDFF1;

// Function to perform initial permutation
uint64_t initial_permutation(uint64_t block) {
    uint64_t result = 0;
    int i;
    for (i = 0; i < BLOCK_SIZE; i++) {
        result |= ((block >> (BLOCK_SIZE - initial_permutation_table[i])) & 1) << (BLOCK_SIZE - i - 1);
    }
    return result;
}

int main() {
    uint64_t plaintext = 0x0123456789ABCDEF; 
    uint64_t ciphertext;
    uint64_t key = example_key;
    
    printf("Plain Text: %016llx\n", plaintext);

    
    uint64_t permuted_plain = initial_permutation(plaintext);
    printf("Permuted Plain Text: %016llx\n", permuted_plain);

    printf("Ciphertext: %016llx\n", ciphertext);

    return 0;
}
